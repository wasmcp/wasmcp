/// Provides a standardized way for servers to offer argument autocompletion suggestions for prompts and resource URIs
/// https://modelcontextprotocol.io/specification/2025-06-18/server/utilities/completion


/// Serves the COMPLETION capability over the Streamable HTTP transport
world completion-transport {
    import lifecycle;
    import completion;
}

/// Serves the COMPLETION capability over the Streamable HTTP transport with authorization
world authorized-completion-transport {
    include completion-transport;
    import authorization;
}

/// Implements the COMPLETION capability
world completion-provider {
    export lifecycle;
    export completion;
}
 
/// Implements the COMPLETION capability with authorization
world authorized-completion-provider {
    include completion-provider;
    export authorization;
}

/// Type definitions for completion
interface completion-types {
    use mcp-types.{meta-fields};

    /// Request for completion suggestions
    record complete-request {
        /// What we're completing for (prompt or resource)
        ref: completion-reference,
        /// Name of the argument being completed
        argument-name: string,
        /// Current partial value of the argument
        argument-value: string,
        /// Additional context for completion
        context: option<completion-context>,
        /// Extension metadata
        meta: option<meta-fields>,
    }

    /// Reference to what we're completing
    variant completion-reference {
        /// Completing for a prompt
        prompt(string),
        /// Completing for a resource template
        resource-template(string),
    }

    /// Additional context for generating completions
    record completion-context {
        /// Previously resolved arguments
        arguments: option<list<tuple<string, string>>>,
    }

    /// Completion suggestions
    record complete-result {
        /// Suggested completion values
        values: list<string>,
        /// Total number of possible completions (may exceed returned values)
        total: option<s64>,
        /// Whether more completions are available
        has-more: option<bool>,
        /// Extension metadata
        meta: option<meta-fields>,
    }
}

/// The COMPLETION capability
/// https://modelcontextprotocol.io/specification/2025-06-18/server/utilities/completion
interface completion {
    use mcp-types.{mcp-error};
    use completion-types.{complete-request, complete-result};
    
    /// Handle request for completion suggestions
    complete: func(request: complete-request) -> result<complete-result, mcp-error>;
}
