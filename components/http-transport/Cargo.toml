[package]
name = "mcp_transport_http"
version = "0.2.0"
edition = "2024"
rust-version = "1.89"

[lib]
crate-type = ["cdylib"]

[dependencies]
spin-sdk = "4.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
base64 = "0.22"
wit-bindgen-rt = { version = "0.43.0", features = ["bitflags"] }
rmcp = { version = "0.6.4", default-features = false, features = ["server", "macros", "base64"] }
wasmcp-core = { path = "../../crates/wasmcp-core" }
once_cell = "1.21"
thiserror = "2.0"

# JWT validation
jsonwebtoken = { version = "9.3", default-features = false, features = ["use_pem"] }
sha2 = "0.10"
hmac = "0.12"

# Time handling
chrono = { version = "0.4", default-features = false, features = ["serde", "std", "clock"] }

# Policy engine
regorus = { version = "0.3", default-features = false, features = ["std"] }

[features]
default = ["tools"]

# Capabilities - choose which capabilities this transport will support
tools = []
resources = []
prompts = []
completion = []

[package.metadata.component]
package = "mcp:transport-http"

[package.metadata.component.bindings]
derives = ["serde::Serialize", "serde::Deserialize", "Clone"]

# Map MCP types to use wasmcp_core instead of generating new types
[package.metadata.component.bindings.with]
"wasmcp:mcp/mcp-types@0.2.0" = "wasmcp_core"
"wasmcp:mcp/lifecycle-types@0.2.0" = "wasmcp_core"
"wasmcp:mcp/authorization-types@0.2.0" = "wasmcp_core"
"wasmcp:mcp/tools-types@0.2.0" = "wasmcp_core"

[package.metadata.component.target]
path = "../../wit"
world = "tools-transport"

[package.metadata.component.target.dependencies]
"wasmcp:mcp" = { path = "../../crates/wasmcp-core/wit" }
