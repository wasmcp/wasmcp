[package]
name = "mcp_transport_http"
version = "0.2.0-alpha.6"
edition = "2024"
rust-version = "1.89"

[lib]
crate-type = ["cdylib"]

[dependencies]
spin-sdk = "4.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
base64 = "0.22"
wit-bindgen-rt = { version = "0.43.0", features = ["bitflags"] }
rmcp = { version = "0.6.3", default-features = false, features = ["server", "macros", "base64"] }
once_cell = "1.21"
thiserror = "2.0"

# JWT validation
jsonwebtoken = { version = "9.3", default-features = false, features = ["use_pem"] }
sha2 = "0.10"
hmac = "0.12"

# Time handling
chrono = { version = "0.4", default-features = false, features = ["serde", "std", "clock"] }

# Policy engine
regorus = { version = "0.3", default-features = false, features = ["std"] }

[features]
default = ["tools"]

# Capabilities - choose which capabilities this transport will support
tools = []
resources = []
prompts = []
sampling = []
elicitation = []
roots = []
completion = []

# Common combinations
basic = ["tools", "resources"]
standard = ["tools", "resources", "prompts"]
full = ["tools", "resources", "prompts", "sampling", "elicitation", "roots", "completion"]

# Note: auth is now always available - providers control it via get-auth-config()

# Future features:
# sse = []  # Server-Sent Events for subscriptions and notifications
# sessions = ["dep:wasi-keyvalue"]  # Stateful session support

[package.metadata.component]
package = "mcp:transport-http"

[package.metadata.component.bindings]
derives = ["serde::Serialize", "serde::Deserialize", "Clone"]

[package.metadata.component.target]
package = "wasmcp:mcp"
version = "0.2.0-alpha.6"
# All transports now support optional auth - providers control it via get-auth-config()
world = "tools-transport"